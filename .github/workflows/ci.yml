name: Continous Integration

# 1 - Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  pipeline:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [8.1, 8.2, 8.3]

    name: PHP ${{ matrix.php }}

    steps:

      # 1.1 - Create Build Environment

      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov

      # 1.2 - Build Application

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Normalize composer
        run: composer run-script normalize:check

      - name: Composer audit
        run: composer audit

      # 2 - Code Analysis

      # 2.1 - PHP Linter

      - name: PHP Linter
        run: composer run-script phplint

      # 2.2 - Code Style Checker

      - name: Code Style Checker
        run: composer run-script codestyle

      # 2.3 - Static Code Analysis

      - name: Static Code Analysis
        run: composer run-script analyse

      # 3 - Tests

      # 3.1 - Unit Tests

      - name: Unit tests
        run: composer run-script test:unit
